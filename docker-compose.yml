version: '3.8'

services:
  apigateway:
    restart: unless-stopped
    build:
      context: ./ApiGateway/ApiGateway
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - homenet

  databaseservice:
    restart: unless-stopped
    build:
      context: ./DatabaseService/DatabaseService
      dockerfile: Dockerfile
    ports:
      - "5043:5043"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      db:
        condition: service_healthy
    networks:
      - homenet

  db:
    restart: unless-stopped
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./ApiGateway/ApiGateway/SQL/apigateway.sql:/docker-entrypoint-initdb.d/apigateway.sql
      - ./DatabaseService/DatabaseService/SQL/databaseservice.sql:/docker-entrypoint-initdb.d/databaseservice.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - homenet
  
  mqtt:
    image: eclipse-mosquitto:2.0
    restart: unless-stopped
    volumes:
      - "./zigbee2mqtt/zigbee2mqtt/mosquitto-data:/mosquitto"
    ports:
      - "1883:1883"
      - "9001:9001"
    command: "mosquitto -c /mosquitto-no-auth.conf"
    networks:
      - homenet

  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: unless-stopped
    image: koenkk/zigbee2mqtt
    volumes:
      - ./zigbee2mqtt/zigbee2mqtt/zigbee2mqtt-data:/app/data
      - /run/udev:/run/udev:ro
    ports:
      - 8081:8081
    environment:
      - TZ=Europe/Berlin
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    networks:
      - homenet

  frontend:
    build:
      context: ./Frontend/home_app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - homenet

  mqttservice:
    restart: unless-stopped
    build:
      context: ./MQTTService/MQTTService
      dockerfile: Dockerfile
    ports:
      - "5044:5044"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - mqtt
      - zigbee2mqtt
    networks:
      - homenet

  spotifyservice:
    restart: unless-stopped
    build:
      context: ./SpotifyService/SpotifyService
      dockerfile: Dockerfile
    ports:
      - "5045:5045"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - SPOTIFY_REFRESH_TOKEN=${SPOTIFY_REFRESH_TOKEN}
      - SPOTIFY_DEVICE_ID=${SPOTIFY_DEVICE_ID}
      - SPOTIFY_DEFAULT_TRACK_ID=${SPOTIFY_DEFAULT_TRACK_ID}
    networks:
      - homenet

  speakerservice:
    build:
      context: ./SpeakerService
      dockerfile: Dockerfile
    ports:
      - "5046:5046"
    privileged: true
    network_mode: "host"
    volumes:
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket  # Use host's D-Bus socket
      - /dev/bus/usb:/dev/bus/usb
      - /run/systemd/system:/run/systemd/system:ro   # Mount host systemd socket (read-only)
      - ${HOME}/.asoundrc:/home/ubuntu/.asoundrc # Mount host asoundrc file
    restart: unless-stopped

volumes:
  db_data:

networks:
  homenet:
