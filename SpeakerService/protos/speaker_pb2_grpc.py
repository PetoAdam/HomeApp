# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import protos.speaker_pb2 as speaker__pb2


class SpeakerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListPairableDevices = channel.unary_unary(
                '/HomeApp.SpeakerService/ListPairableDevices',
                request_serializer=speaker__pb2.ListPairableDevicesRequest.SerializeToString,
                response_deserializer=speaker__pb2.ListPairableDevicesResponse.FromString,
                )
        self.ConnectDevice = channel.unary_unary(
                '/HomeApp.SpeakerService/ConnectDevice',
                request_serializer=speaker__pb2.ConnectDeviceRequest.SerializeToString,
                response_deserializer=speaker__pb2.ConnectDeviceResponse.FromString,
                )
        self.DisconnectDevice = channel.unary_unary(
                '/HomeApp.SpeakerService/DisconnectDevice',
                request_serializer=speaker__pb2.DisconnectDeviceRequest.SerializeToString,
                response_deserializer=speaker__pb2.DisconnectDeviceResponse.FromString,
                )
        self.ListConnectedSpeakers = channel.unary_unary(
                '/HomeApp.SpeakerService/ListConnectedSpeakers',
                request_serializer=speaker__pb2.ListConnectedSpeakersRequest.SerializeToString,
                response_deserializer=speaker__pb2.ListConnectedSpeakersResponse.FromString,
                )


class SpeakerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListPairableDevices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnectedSpeakers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpeakerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListPairableDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPairableDevices,
                    request_deserializer=speaker__pb2.ListPairableDevicesRequest.FromString,
                    response_serializer=speaker__pb2.ListPairableDevicesResponse.SerializeToString,
            ),
            'ConnectDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectDevice,
                    request_deserializer=speaker__pb2.ConnectDeviceRequest.FromString,
                    response_serializer=speaker__pb2.ConnectDeviceResponse.SerializeToString,
            ),
            'DisconnectDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectDevice,
                    request_deserializer=speaker__pb2.DisconnectDeviceRequest.FromString,
                    response_serializer=speaker__pb2.DisconnectDeviceResponse.SerializeToString,
            ),
            'ListConnectedSpeakers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnectedSpeakers,
                    request_deserializer=speaker__pb2.ListConnectedSpeakersRequest.FromString,
                    response_serializer=speaker__pb2.ListConnectedSpeakersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'HomeApp.SpeakerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SpeakerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListPairableDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HomeApp.SpeakerService/ListPairableDevices',
            speaker__pb2.ListPairableDevicesRequest.SerializeToString,
            speaker__pb2.ListPairableDevicesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HomeApp.SpeakerService/ConnectDevice',
            speaker__pb2.ConnectDeviceRequest.SerializeToString,
            speaker__pb2.ConnectDeviceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HomeApp.SpeakerService/DisconnectDevice',
            speaker__pb2.DisconnectDeviceRequest.SerializeToString,
            speaker__pb2.DisconnectDeviceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnectedSpeakers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HomeApp.SpeakerService/ListConnectedSpeakers',
            speaker__pb2.ListConnectedSpeakersRequest.SerializeToString,
            speaker__pb2.ListConnectedSpeakersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
